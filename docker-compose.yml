version: '3.8'

services:
  client_adhesion:
    image: nginx:latest
    container_name: client_adhesion
    depends_on:
      - app_adhesion
    volumes:
      - ./client:/usr/share/nginx/html/adhesion
    networks:
      - traefik_web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.client_adhesion.priority=1000"
      - "traefik.http.routers.client_adhesion.rule=(Host(`${DNS_NAME}`) || Host(`www.${DNS_NAME}`)) && PathPrefix(`/adhesion/`)"

      - "traefik.http.routers.client_adhesion.entrypoints=websecure"
      - "traefik.http.routers.client_adhesion.tls=true"
      - "traefik.http.routers.client_adhesion.tls.certresolver=myresolver"

  app_adhesion:
    image: 'docker-spring-boot-adhesion'
    container_name: app_adhesion
    build:
      context: ./app
    depends_on:
      - db_adhesion
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db_adhesion:5432/${DB_NAME}
      - SPRING_DATASOURCE_USERNAME=${DB_USER}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - MAIL_ADRESSE=${MAIL_ADRESSE}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - DNS_NAME=${DNS_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - SERVER_PORT=8000
    expose:
      - "8000"
    networks:
      - traefik_web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app_adhesion.priority=10000"
      - "traefik.http.routers.app_adhesion.rule=(Host(`${DNS_NAME}`) || Host(`www.${DNS_NAME}`)) && PathPrefix(`/adhesion/api/`)"

      - "traefik.http.routers.app_adhesion.middlewares=app_adhesion-replacepathregex"
      - "traefik.http.middlewares.app_adhesion-replacepathregex.replacepathregex.regex=^/adhesion/api/(.*)"
      - "traefik.http.middlewares.app_adhesion-replacepathregex.replacepathregex.replacement=/$$1"

      - "traefik.http.routers.app_adhesion.entrypoints=websecure"
      - "traefik.http.routers.app_adhesion.tls=true"
      - "traefik.http.routers.app_adhesion.tls.certresolver=myresolver"

  db_adhesion:
    image: postgres:14.1-alpine
    container_name: db_adhesion
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:          #supprimer en remote
      - "8105:5432" #supprimer en remote
    volumes:
      - data-volume:/var/lib/postgresql
    networks:
      - traefik_web
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.db_adhesion.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.db_adhesion.entrypoints=adhesion_db"
      - "traefik.tcp.services.db_adhesion.loadbalancer.server.port=5432"

volumes:
  data-volume:

networks:
  traefik_web:
    external: true
